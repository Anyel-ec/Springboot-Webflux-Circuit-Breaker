spring.application.name=circuit-breaker


# Configuración base 'default'
# Config global por defecto
# Activa el Health Indicator para monitorear el estado del Circuit Breaker desde Spring Actuator
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true

# Tamaño de la ventana deslizante para calcular métricas (número de últimas llamadas consideradas)
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10

# Número mínimo de llamadas para que el Circuit Breaker empiece a calcular las tasas de fallo
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5

# Número permitido de llamadas mientras el Circuit Breaker está en estado HALF_OPEN (modo prueba)
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3

# Habilita la transición automática del estado OPEN a HALF_OPEN luego de esperar el tiempo configurado
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true

# Tiempo (en milisegundos) que el Circuit Breaker permanece en estado OPEN antes de probar si el servicio se recuperó
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=60000


# Umbral (%) de tasa de fallos para abrir el Circuit Breaker; si el porcentaje de fallos supera este valor, se abre el circuito
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50

# Tamaño del buffer para eventos consumidos (usado internamente para el manejo de eventos del Circuit Breaker)
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10

# Lista de excepciones que se consideran fallos para el Circuit Breaker (aquí se registran todas las excepciones java.lang.Exception)
resilience4j.circuitbreaker.configs.default.recordExceptions=java.lang.Exception


# Configuración específica que hereda de 'default'
resilience4j.circuitbreaker.instances.googlePing.baseConfig=default
